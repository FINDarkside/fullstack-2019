{"version":3,"sources":["services/persons.js","NotificationBar.js","Filter.js","Persons.js","PersonForm.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","newObject","post","id","put","concat","delete","NotificationBar","_ref","notifications","length","react_default","a","createElement","className","map","n","i","key","success","message","Filter","search","setSearch","value","onChange","evt","target","Persons","persons","removePerson","p","name","number","onClick","PersonForm","addPerson","_useState","useState","_useState2","Object","slicedToArray","newName","setNewName","_useState3","_useState4","newNumber","setNewNumber","onSubmit","preventDefault","type","App","setPersons","setNotifications","_useState5","_useState6","useEffect","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","personService","sent","console","log","data","stop","matchingPersons","filter","toLowerCase","indexOf","_ref2","_callee2","newPerson","match","_res","_context2","find","window","confirm","createNotification","t0","abrupt","toConsumableArray","t1","response","error","_x","apply","this","arguments","_ref3","_callee3","person","_context3","_x2","notification","setTimeout","removeNotification","obj","o","src_NotificationBar","src_Filter","src_PersonForm","src_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a67191ef.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n}\r\n","import React from 'react'\r\n\r\nconst NotificationBar = ({ notifications }) => {\r\n    if (!notifications.length)\r\n        return null\r\n\r\n    return (\r\n        <div className=\"notification-container\">\r\n            {notifications.map((n, i) =>\r\n                <div key={i}>\r\n                    <div className={n.success ? 'notification success' : 'notification error'}>{n.message}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotificationBar;","import React from 'react';\r\n\r\nconst Filter = ({ search, setSearch }) => {\r\n    return (\r\n        <div>\r\n            Rajaa näytettäviä <input value={search} onChange={(evt) => setSearch(evt.target.value)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react';\r\n\r\nconst Persons = ({ persons, removePerson }) => {\r\n    return (\r\n        <div>\r\n            {persons.map(p =>\r\n                <div key={p.name}>\r\n                    {p.name} {p.number}\r\n                    <button onClick={() => removePerson(p)}>Delete</button>\r\n                </div>\r\n\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons;","import React, { useState } from 'react';\r\n\r\nconst PersonForm = ({ addPerson }) => {\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        addPerson({ name: newName, number: newNumber })\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n                nimi: <input onChange={(evt) => setNewName(evt.target.value)} value={newName} />\r\n            </div>\r\n            <div>\r\n                numero: <input onChange={(evt) => setNewNumber(evt.target.value)} value={newNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">lisää</button>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport NoficationBar from './NotificationBar';\r\nimport Filter from './Filter';\r\nimport Persons from './Persons';\r\nimport PersonForm from './PersonForm';\r\n\r\nconst notificationTimeout = 2000;\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n  const [notifications, setNotifications] = useState([])\r\n  const [search, setSearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await personService.getAll();\r\n      console.log(res);\r\n      setPersons(res.data);\r\n    })()\r\n  }, [])\r\n\r\n  const matchingPersons = persons.filter(p => p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n\r\n  const addPerson = async (newPerson) => {\r\n    const match = persons.find(p => p.name === newPerson.name)\r\n    if (match) {\r\n      if (window.confirm(`${newPerson.name} on jo luettelossa, korvataanko vanha numero uudella?`)) {\r\n        try {\r\n          const res = await personService.update(match.id, newPerson)\r\n          setPersons(persons.map(p => p.id === match.id ? res.data : p))\r\n          createNotification(`Päivitettiin henkilön ${newPerson.name} numero`, true)\r\n        } catch (err) {\r\n          createNotification(`Henkilö ${newPerson.name} on jo poistettu `, false)\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    try {\r\n      const res = await personService.create(newPerson)\r\n      console.log(res.data)\r\n      setPersons([\r\n        ...persons,\r\n        res.data\r\n      ])\r\n      createNotification(`Lisättiin ${newPerson.name}`, true)\r\n    } catch (err) {\r\n      console.log(err.response)\r\n      if (err.response)\r\n        createNotification(`Käyttäjän lisääminen epäonnistui: ${err.response.data.error}`, false)\r\n      else\r\n        createNotification(`Käyttäjän lisääminen epäonnistui: ${err.message}`, false)\r\n    }\r\n  }\r\n\r\n  const removePerson = async (person) => {\r\n    if (window.confirm(`Poistetaanko henkilo ${person.name}`)) {\r\n      try {\r\n        await personService.remove(person.id)\r\n        setPersons(persons.filter(p => p.id !== person.id))\r\n        createNotification(`Poistettiin ${person.name}`, true)\r\n      } catch (err) {\r\n        createNotification(`Henkilö ${person.name} on jo poistettu `, false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const createNotification = (message, success) => {\r\n    const notification = { message, success }\r\n    setNotifications([...notifications, notification])\r\n    setTimeout(() => removeNotification(notification), notificationTimeout)\r\n  }\r\n\r\n  const removeNotification = (obj) => {\r\n    setNotifications(notifications.filter(o => o !== obj))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n      <NoficationBar notifications={notifications} />\r\n      <Filter search={search} setSearch={setSearch} />\r\n      <h3>Lisää henkilö</h3>\r\n      <PersonForm addPerson={addPerson} />\r\n      <h2>Numerot</h2>\r\n      <Persons persons={matchingPersons} removePerson={removePerson} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}